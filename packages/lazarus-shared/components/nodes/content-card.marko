import { getAsObject, getAsArray, get } from "@base-cms/object-path";
import defaultValue from "@base-cms/marko-core/utils/default-value";
import blueconic from "../../blueconic";

$ const { site } = out.global;

$ const content = getAsObject(input, "node");
$ const labels = getAsArray(content, "labels");
$ const primaryImage = getAsObject(content, "primaryImage");
$ const primarySection = getAsObject(content, "primarySection");
$ const isSponsored = labels.includes("Sponsored");
$ const isMembersOnly = labels.includes("Members Only");

$ const withTeaser = defaultValue(input.withTeaser, true);
$ const withSection = defaultValue(input.withSection, true);
$ const withDates = defaultValue(input.withDates, true);
$ const withSponsored = defaultValue(input.withSponsored, true);
$ const withMembersOnly = defaultValue(input.withMembersOnly, true);

$ const useStickyPromotions = content.type === "promotion" ? blueconic.useStickyPromotions({ site, promotion: content }) : false;
$ const href = useStickyPromotions ? get(content, "promotionContext.path") : get(content, "siteContext.path");

$ const { linkAttrs } = input;

<marko-web-node
  type=`${content.type}-content`
  image-position=defaultValue(input.imagePosition, "top")
  flush=true
  card=true
  full-height=true
  attrs=input.attrs
  modifiers=input.modifiers
>
  <if(defaultValue(input.displayImage, true))>
    <@image
      ar="16:9"
      width=300
      use-placeholder=false
      ...input.image
      src=primaryImage.src
      alt=primaryImage.alt
      is-logo=primaryImage.isLogo
      fluid=true
      link={ href, attrs: linkAttrs }
    />
  </if>
  <@body>
    <if((withSponsored && isSponsored) || (withMembersOnly && isMembersOnly))>
      <@header>
        <@left|{ blockName }|>
          <div class=`${blockName}__sponsored-content`>{{labels}}</div>
        </@left>
      </@header>
    </if>
    <@title tag="h5" ...input.title>
      <marko-web-content-short-name tag=null obj=content link={ href, attrs: linkAttrs } />
    </@title>
    <@text|{ blockName }| show=withDates>
      <dates block-name=blockName content=content />
    </@text>
    <@text modifiers=["teaser"] show=(withTeaser && content.teaser)>
      <marko-web-content-teaser tag=null obj=content link={ href, attrs: linkAttrs } />
    </@text>
    <if(withSection)>
      <@footer>
        <@left>
          <marko-web-website-section-name obj=primarySection link=true />
        </@left>
      </@footer>
    </if>
  </@body>
</marko-web-node>
