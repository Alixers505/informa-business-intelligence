import generateId from "@base-cms/marko-web-gam/utils/generate-id";
import { getAsObject } from "@base-cms/object-path";
import queryFragment from "../../graphql/fragments/content-list";

$ const adunit = getAsObject(input, "adunit");
$ const slotId = generateId();

<if(adunit.location && adunit.position)>
  <lazarus-shared-increment-ad-pos slot-id=slotId />
  <marko-web-gam-refresh-ad on="load-more-in-view" slot-id=slotId />
</if>

<!-- @todo check out stickybits js lib for handling position: sticky -->
<marko-web-query|{ nodes }| name="all-published-content" params={ limit: 2, excludeContentTypes: ["Contact"], queryFragment }>
  <lazarus-shared-content-list-flow
    nodes=nodes
    inner-justified=false
    flush-x=true
    flush-y=true
  >
    <@header>Recent</@header>
    <@node display-image=false with-teaser=false />
  </lazarus-shared-content-list-flow>
</marko-web-query>

<if(adunit.location && adunit.position)>
  <informa-gam-adunit
    ...adunit
    location=adunit.location
    position=adunit.position
    context=adunit.context
    id=slotId
    modifiers=["max-width-300"]
  />
</if>

<marko-web-query|{ nodes }| name="all-published-content" params={ limit: 3, skip: 2, excludeContentTypes: ["Contact"], queryFragment }>
  <lazarus-shared-content-list-flow
    nodes=nodes
    inner-justified=false
    flush-x=true
    flush-y=true
  >
    <@node display-image=false with-teaser=false />
  </lazarus-shared-content-list-flow>
</marko-web-query>

<marko-web-query|{ nodes }|
  name="website-optioned-content"
  params={ sectionAlias: "home", optionName: "Pinned", limit: 4, queryFragment }
>
  <lazarus-shared-content-list-flow
    nodes=nodes
    inner-justified=false
    flush-x=true
    flush-y=true
  >
    <@header>Featured</@header>
    <@node display-image=false with-teaser=false />
  </lazarus-shared-content-list-flow>
</marko-web-query>
