import { getAsArray } from "@base-cms/object-path";

$ const { gam } = out.global;
$ const { location, position, context } = input;

<if(location)>
  <marko-web-resolve|{ resolved }| promise=gam.adunit({ location, context })>
    $ const adunits = resolved.get(position);
    <if(adunits)>
      <for|adunit| of=adunits>
        $ const size = adunit.size.map(({ width, height }) => [width, height]);
        $ const sizeMapping = getAsArray(adunit.sizeMapping).map(({ viewport: vp, size }) => {
          return { viewport: [vp.width, vp.height], size: size.map(({ width, height }) => [width, height]) };
        });
        $ const targeting = { ...adunit.targeting, ...input.targeting };
        <marko-web-gam-define-display-ad
          path=adunit.path
          size=size
          size-mapping=sizeMapping
          targeting=targeting
          id=input.id
          modifiers=input.modifiers
          apply-style=input.applyStyle
          class=input.class
          with-wrapper=input.withWrapper
          attrs={
            'data-informa-gam-location': location,
            'data-informa-gam-position': position,
            'data-informa-gam-context': JSON.stringify(context || {}),
          }
        />
      </for>
    </if>
    <else>
      <!-- @todo warn if not found. -->
      $ console.log('NOT FOUND!!');
    </else>
  </marko-web-resolve>
</if>
